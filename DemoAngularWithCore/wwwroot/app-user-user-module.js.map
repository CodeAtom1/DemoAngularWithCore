{"version":3,"sources":["webpack:///./src/app/user/login.component.html","webpack:///./src/app/user/login.component.ts","webpack:///./src/app/user/profile.component.html","webpack:///./src/app/user/profile.component.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/app/user/user.routes.ts"],"names":[],"mappings":"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","file":"app-user-user-module.js","sourcesContent":["module.exports = \"\\r\\n<h1>Login</h1>\\r\\n<hr>\\r\\n<div class=\\\"col-md-4\\\">\\r\\n  <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(loginForm.value)\\\" novalidate >\\r\\n    <div class=\\\"form-group\\\" >\\r\\n      <label for=\\\"userName\\\">User Name:</label>\\r\\n      <em *ngIf=\\\"loginForm.controls.userName?.invalid &&\\r\\n      (loginForm.controls.userName?.touched || mouseoverLogin)\\\">Required</em>\\r\\n      <input (ngModel)=\\\"userName\\\"\\r\\n      name=\\\"userName\\\" required id=\\\"userName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"User Name...\\\"\\r\\n       />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\" >\\r\\n      <label for=\\\"password\\\">Password:</label>\\r\\n      <em *ngIf=\\\"loginForm.controls.password?.invalid &&\\r\\n      (loginForm.controls.password?.touched || mouseoverLogin)\\\">Required</em>\\r\\n      <input (ngModel)=\\\"password\\\"\\r\\n      name=\\\"password\\\" required id=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password...\\\"\\r\\n       />\\r\\n    </div>\\r\\n        \\r\\n    <span (mouseenter)=\\\"mouseoverLogin=true\\\" (mouseleave)=\\\"mouseoverLogin=false\\\">\\r\\n    <button type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\" class=\\\"btn btn-primary\\\">Login</button>\\r\\n    </span>\\r\\n  <button type=\\\"button\\\"  class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n  </form>\\r\\n</div>\"","import { Component } from \"@angular/core\";\r\nimport { AuthService } from \"./auth.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n templateUrl:'./login.component.html',\r\n styles: [`\r\n  em{ float: right; pad-left: 10px; color: #E05C65;}`]\r\n})\r\nexport class LoginComponent{\r\n\r\n    constructor(private authService: AuthService,private router: Router){\r\n    }\r\n    userName\r\n    password\r\n    mouseoverLogin\r\n    onSubmit(ngForm){\r\n        this.authService.loginUser(ngForm.userName,ngForm.password)\r\n        this.router.navigate(['events'])\r\n    }\r\n    cancel(){\r\n        this.router.navigate(['events'])\r\n    }\r\n}","module.exports = \"<div>\\r\\n        <h1>Edit Your Profile </h1>\\r\\n        <hr>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n          <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"saveProfile(profileForm.value)\\\" autocomplete=\\\"off\\\" novalidate>\\r\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'error': !validateFirstName() }\\\">\\r\\n              <label for=\\\"firstName\\\">First Name:</label>\\r\\n              <em *ngIf=\\\"!validateFirstName() && profileForm.controls.firstName.errors.required\\\"> Required</em>\\r\\n              <em *ngIf=\\\"!validateFirstName() && profileForm.controls.firstName.errors.pattern\\\"> Must start with a letter</em>\\r\\n              <input formControlName=\\\"firstName\\\" id=\\\"firstName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name...\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'error': !validateLastName() }\\\">\\r\\n              <label for=\\\"lastName\\\">Last Name:</label>\\r\\n              <em *ngIf=\\\"!validateLastName()\\\"> Required </em>\\r\\n              <input formControlName=\\\"lastName\\\" id=\\\"lastName\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name...\\\" />\\r\\n            </div>\\r\\n      \\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\"","import { Component, OnInit, Inject } from '@angular/core'\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\r\nimport { AuthService } from './auth.service';\r\nimport { TOASTR_TOKEN,Toastr } from './../common/toastr.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: 'profile.component.html',\r\n  styles: [`\r\n    em { float: right; padding-left: 10px; color: #E05C65;}\r\n    .error input{ background-color: #E3C3C5;}\r\n    .error ::-webkit-input-placeholder { color: #999}\r\n    .error ::-moz-placeholder { color: #999}\r\n    .error :-moz-placeholder { color: #999}\r\n    .error :ms-input-placeholder { color: #999}    \r\n  `\r\n]\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  constructor(private router:Router, private authService:AuthService,\r\n    @Inject(TOASTR_TOKEN)  private toastr: Toastr){\r\n    \r\n  }\r\n  \r\n  profileForm:FormGroup\r\n  private firstName: FormControl\r\n  private lastName: FormControl\r\n  \r\n  ngOnInit(): void {\r\n    this.firstName= new FormControl(this.authService.currentUser.firstName,[Validators.required,Validators.pattern('[a-zAZ].*')])\r\n    this.lastName=new FormControl(this.authService.currentUser.lastName,Validators.required)\r\n\r\n    this.profileForm= new FormGroup({\r\n      firstName: this.firstName,  \r\n      lastName: this.lastName\r\n    })\r\n  }\r\n\r\n  validateFirstName():boolean{\r\n    return this.firstName.valid || this.firstName.untouched\r\n  }\r\n  validateLastName():boolean{\r\n    return this.lastName.valid || this.lastName.untouched\r\n  }\r\n  saveProfile(formValues){\r\n   if(this.profileForm.valid){\r\n      this.authService.updateCurrentUser(formValues.firstName,formValues.lastName)\r\n      this.toastr.success('Profile saved')\r\n   }\r\n  }  \r\n\r\n  cancel() {\r\n    this.router.navigate(['events'])\r\n  }\r\n      \r\n}","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule,ReactiveFormsModule} from '@angular/forms'\r\n\r\nimport { userRoutes } from \"./user.routes\";\r\nimport { ProfileComponent } from \"./profile.component\";\r\nimport { LoginComponent } from \"./login.component\";\r\n\r\n//feature module/lazy loading module\r\n@NgModule({\r\n    imports:[ CommonModule,\r\n    FormsModule,\r\n        ReactiveFormsModule,\r\n        RouterModule.forChild(userRoutes),\r\n    ],\r\n\r\n    declarations:[ProfileComponent,LoginComponent],\r\n\r\n    providers:[]\r\n})\r\nexport class UserModule{\r\n\r\n}","import { ProfileComponent } from \"./profile.component\";\r\nimport { LoginComponent } from \"./login.component\";\r\n\r\nexport const userRoutes=[\r\n    { path:'profile', component:ProfileComponent}, \r\n    { path: 'login', component: LoginComponent}\r\n    //user/profile\r\n]"],"sourceRoot":""}